{"version":3,"sources":["js/components/indexComponent.js","js/components/SearchPokemonComponent.js","js/components/AppComponent.js","js/containers/AppContainer.js","js/actions/index.js","js/reducers/reducer/number.js","js/reducers/reducer/errorText.js","js/reducers/index.js","index.js"],"names":["IndexPage","react_default","a","createElement","SearchPokemon","props","className","id","type","onChange","e","decidePokemon","target","value","placeholder","errorText","number","normalArray","name","types","AppComponent","i","data","isMegaEvolution","form","push","createNormalArray","react_router_dom","to","Switch","Route","exact","path","component","render","SearchPokemonComponent","connect","state","dispatch","arguments","length","undefined","action","combineReducers","store","createStore","rootReducer","composeWithDevTools","ReactDOM","es","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.9cb71872.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * トップページです。\n */\nconst IndexPage = () => (\n  <div>\n    <h2>Topページです</h2>\n  </div>\n);\n\nexport default IndexPage;\n","import React from \"react\";\n\nconst SearchPokemon = (props) => {\n\n  return(\n    \n    <section className=\"searchSectionInput\">\n      <div className=\"inputArea\">\n        <h2>1. 図鑑ナンバー検索</h2>\n        <p className=\"inputAreaText\">※1〜802まで</p>\n        <input \n          id=\"inputText\"\n          className=\"inputText\"\n          type=\"text\"\n          onChange={e => props.decidePokemon(e.target.value)}\n          placeholder=\"図鑑ナンバーを入力\"\n          />\n        <p className=\"errorText\">{props.errorText}</p>\n      </div>\n      <div className=\"outputArea\">\n        <dl>\n          <dt>図鑑番号</dt>\n          <dd>{props.number}</dd>\n          <dt>名前</dt>\n          <dd>{props.normalArray[props.number].name}</dd>\n          <dt>タイプ</dt>\n          <dd>\n            <span>{props.normalArray[props.number].types[0]}</span>\n            <span>{props.normalArray[props.number].types[1]}</span>\n          </dd>\n        </dl>\n        <div className={\"img imgNo\" + props.number}></div>\n      </div>\n    </section>\n\n  )\n}\n\nexport default SearchPokemon;","import React from 'react';\nimport IndexPage from \"./indexComponent\";\nimport SearchPokemon from \"./SearchPokemonComponent\";\n// import SearchType from './SearchType';\n// import SearchPartner from './SearchPartner';\nimport data from '../../data/pokemon_data.json';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport Route from \"react-router-dom/es/Route\";\nimport Switch from \"react-router-dom/es/Switch\";\n\nconst AppComponent = (props) => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     inputNumber: '1',\n  //     normalArray : [],\n  //     typeArray : [],\n  //     subTypeArray : [],\n  //     errorText : '',\n  //     detailData : ''\n  //   };\n\n  //   this.createNormalArray();\n  // }\n\n  const normalArray =[];\n  \n  const createNormalArray = () => {\n    for(let i = 0; i<934; i++){\n      if(!(data[i].isMegaEvolution) && !(data[i].form)) {\n        normalArray.push(data[i]);\n      }\n    }\n  }\n\n  createNormalArray();\n\n\n  // decideType(e) {\n\n  //   // テキストを表示\n  //   this.showTypeText();\n\n  //   const typeSelector1Value = document.getElementById('typeSelector1').value;\n  //   const typeSelector2Value = document.getElementById('typeSelector2').value;\n    \n  //   if( !(typeSelector1Value !== '-' && typeSelector2Value !== '-')) {\n  //     const typeArray = [];\n    \n  //       for(let i = 0; i<this.state.normalArray.length; i++){\n  //         for(let j = 0; j < 2; j++) {\n  //           if(this.state.normalArray[i].types[j] === typeSelector1Value || this.state.normalArray[i].types[j] === typeSelector2Value) {\n  //             typeArray.push({\n  //               key: i,\n  //               number: this.state.normalArray[i]\n  //             })\n  //           }\n  //         }\n  //       }\n  //       this.setState({\n  //         typeArray: typeArray\n  //       });\n\n  //   } else {\n  //     const typeArray = [];\n  //     const subTypeArray = [];\n\n  //     for(let i = 0; i<this.state.normalArray.length; i++){\n  //       for(let j = 0; j < 2; j++) {\n  //         if(this.state.normalArray[i].types[j] === typeSelector1Value) {\n  //           typeArray.push({\n  //             key: i,\n  //             number: this.state.normalArray[i]\n  //           })\n  //         }\n  //       }\n  //     }\n\n  //     for(let i = 0; i<typeArray.length; i++){\n  //       for(let j = 0; j < 2; j++) {\n  //         if(typeArray[i].number.types[j] === typeSelector2Value) {\n  //           subTypeArray.push(typeArray[i])\n  //         }\n  //       }\n  //     }\n  //     this.setState({\n  //       typeArray: subTypeArray\n  //     });\n\n  //   }\n  // }\n  // showTypeText() {\n\n  //   const clickTypeText = document.getElementById('FnClickTypeText');\n  //   clickTypeText.classList.add(\"is-show\");\n  // }\n  // removeTypeText() {\n\n  //   const clickTypeText = document.getElementById('FnClickTypeText');\n  //   clickTypeText.classList.remove(\"is-show\");\n  // }\n  // resetType() {\n  //   const typeSelector1 = document.getElementById('typeSelector1');\n  //   const typeSelector2 = document.getElementById('typeSelector2');\n\n  //   typeSelector1.value = '-';\n  //   typeSelector2.value = '-';\n\n  //   this.decideType();\n  //   this.removeTypeText();\n  // }\n  \n  \n    \n      return(\n        <BrowserRouter>\n          <div className=\"App\">\n            <header>\n              <nav>\n                <Link to=\"/\">TOP</Link>/\n                <Link to=\"/search\">図鑑ナンバー検索</Link>\n              </nav>\n            </header>\n            <main>\n              \n            <h1>ポケモン図鑑</h1>\n            <hr />\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route path=\"/search\"\n                render={\n                  () => <SearchPokemon\n                    decidePokemon={props.decidePokemon}\n                    number={props.number}\n                    errorText={props.errorText}\n                    normalArray={normalArray}\n                  />\n                }\n              />\n            </Switch>\n\n              {/* <SearchType \n                decideType={e => this.decideType(e)}\n                resetType={e => this.resetType(e)}\n                normalArray={this.state.normalArray}\n                typeArray={this.state.typeArray}\n                detailData={this.state.detailData}\n              /> */}\n\n              {/* <SearchPartner \n                decidePartner={e => this.decidePartner(e)}\n                normalArray={this.state.normalArray}\n                resultNo={this.state.resultNo}\n              /> */}\n\n            </main>\n\n          </div>\n        </BrowserRouter>\n      )\n}\n\n\n\nexport default AppComponent;\n","import {connect} from 'react-redux';\nimport {decidePokemon} from '../actions/index';\nimport AppComponent from '../components/AppComponent';\n\nconst mapStateToProps = state => ({\n  number: state.number,\n  errorText: state.errorText,\n});\n\nconst mapDispatchToProps = dispatch => ({\n      decidePokemon: number => dispatch(decidePokemon(number))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AppComponent);\n","export const decidePokemon = (number) => ({\n  type: (number < 803 && 0 < number) || number == null ? 'TRUE': 'FALSE',\n  number,\n  errorText: ''\n})\n","const number = (state = 0, action) => {\n  switch (action.type) {\n    case 'TRUE':\n      return action.number;\n    default:\n      return 0;\n  }\n};\n\nexport default number;","const errorText = (state = '', action) => {\n  switch (action.type) {\n    case 'TRUE':\n      return '';\n    case 'FALSE':\n      return '適切な数字を入力してください。';\n    default:\n      return state;\n  }\n};\n\nexport default errorText;","import {combineReducers} from 'redux';\nimport number from './reducer/number'\nimport errorText from './reducer/errorText'\n\nexport default combineReducers({\n  number,\n  errorText,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport AppContainer from './js/containers/AppContainer';\nimport { createStore } from 'redux';\nimport rootReducer from './js/reducers/index';\nimport {Provider} from 'react-redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// ストアを作る\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'));"],"sourceRoot":""}