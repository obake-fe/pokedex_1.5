{"version":3,"sources":["js/common/createNormalArray.js","js/common/createTypeArray.js","js/common/decideResultNo.js","js/components/indexComponent.js","js/components/SearchPokemonComponent.js","js/components/showDataComponent.js","js/components/typeSearchComponent.js","js/components/SearchPartnerComponent.js","js/components/AppComponent.js","js/containers/AppContainer.js","js/actions/index.js","js/reducers/reducer/number.js","js/reducers/reducer/errorText.js","js/reducers/reducer/type.js","js/reducers/reducer/id.js","js/reducers/reducer/resultNo.js","js/reducers/reducer/reset.js","js/reducers/index.js","index.js"],"names":["normalArray","i","data","isMegaEvolution","form","push","createNormalArray","createTypeArray","typeSelector1Value","document","getElementById","value","typeSelector2Value","typeArray","subTypeArray","console","log","length","j","types","key","number","decideResultNo","nameArray","inputName","char","substr","slice","hiraganaNoArray","hiragana","resultNo","IndexPage","react_default","a","createElement","SearchPokemon","props","className","id","type","onChange","e","decidePokemon","target","placeholder","errorText","name","ShowData","Number","no","TypeSearch","nodes","onClick","showData","decideType","showDataComponent","SearchPartner","decidePartner","AppComponent","react_router_dom","to","react_router","exact","path","component","render","SearchPokemonComponent","typeSearchComponent","SearchPartnerComponent","connect","state","dispatch","resetType","arguments","undefined","action","reset","combineReducers","store","createStore","rootReducer","composeWithDevTools","ReactDOM","es","AppContainer"],"mappings":"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","file":"static/js/main.0427d0a3.chunk.js","sourcesContent":["import data from '../../data/pokemon_data.json';\n\n\nconst normalArray =[];\n  \nconst createNormalArray = () => {\n  for(let i = 0; i<934; i++){\n    if(!(data[i].isMegaEvolution) && !(data[i].form)) {\n      normalArray.push(data[i]);\n    }\n  }\n}\n\ncreateNormalArray();\n\nexport default normalArray;","import normalArray from '../common/createNormalArray'\n\nconst createTypeArray = () => {\n\n  const typeSelector1Value = document.getElementById('typeSelector1').value;\n  const typeSelector2Value = document.getElementById('typeSelector2').value;\n\n  let typeArray = [];\n  let subTypeArray = [];\n\n  console.log(typeSelector1Value)\n  console.log(typeSelector2Value)\n\n  // 単タイプもしくは指定なしの場合\n  if( !(typeSelector1Value !== '-' && typeSelector2Value !== '-')) {\n    console.log('-')\n    for(let i = 0; i<normalArray.length; i++){\n      for(let j = 0; j < 2; j++) {\n        if(normalArray[i].types[j] === typeSelector1Value || normalArray[i].types[j] === typeSelector2Value) {\n          subTypeArray.push({\n            key: i,\n            number: normalArray[i]\n          })\n        }\n      }\n    }\n\n  } else {\n\n\n    // 複数タイプの場合\n    for(let i = 0; i<normalArray.length; i++){\n      for(let j = 0; j < 2; j++) {\n        if(normalArray[i].types[j] === typeSelector1Value) {\n          typeArray.push({\n            key: i,\n            number: normalArray[i]\n          })\n        }\n      }\n    }\n\n    for(let i = 0; i<typeArray.length; i++){\n      for(let j = 0; j < 2; j++) {\n        if(typeArray[i].number.types[j] === typeSelector2Value) {\n          subTypeArray.push(typeArray[i])\n        }\n      }\n    }\n\n  }\n\n// console.log('normal',normalArray)\n// console.log('type',typeArray)\n// console.log('subtype',subTypeArray)\n\n  return subTypeArray;\n}\n\nexport default createTypeArray;","import hiragana from '../../data/hiragana.json';\n\n  const decideResultNo = () => {\n\n    const nameArray = []\n    const inputName = document.getElementById('inputName');\n    var char = inputName.value;\n    for(let i = 0; i < inputName.value.length; i++) {\n      nameArray.push(char.substr(0,1));\n      let j = inputName.value.length - i - 1;\n      char = char.slice(-j);\n    }\n  \n    const hiraganaNoArray = [];\n    for(let i = 0; i < nameArray.length; i++) {\n      for(let j = 0; j < hiragana.length; j++) {\n        if(nameArray[i] === hiragana[j].char) {\n          hiraganaNoArray.push(hiragana[j].number);\n          break;\n        }\n  \n      }\n  \n    }\n    console.log(hiraganaNoArray);\n  \n    // 計算\n    let resultNo = 1;\n    for (let i = 0; i < hiraganaNoArray.length; i++) {\n      resultNo *= hiraganaNoArray[i];\n    }\n  \n    console.log(resultNo)\n    resultNo = (resultNo + hiraganaNoArray.length) % 802\n    console.log(resultNo)\n    // ここまででポケモン決定\n\n    return resultNo;\n\n  }\n\nexport default decideResultNo;\n","import React from \"react\";\n\n/**\n * トップページです。\n */\nconst IndexPage = () => (\n  <div>\n    <h2>Topページです</h2>\n  </div>\n);\n\nexport default IndexPage;\n","import React from \"react\";\nimport normalArray from '../common/createNormalArray'\n\nconst SearchPokemon = (props) => {\n\n  return(\n    \n    <section className=\"searchSectionInput\">\n      <div className=\"inputArea\">\n        <h2>1. 図鑑ナンバー検索</h2>\n        <p className=\"inputAreaText\">※1〜802まで</p>\n        <input \n          id=\"inputText\"\n          className=\"inputText\"\n          type=\"text\"\n          onChange={e => props.decidePokemon(e.target.value)}\n          placeholder=\"図鑑ナンバーを入力\"\n          />\n        <p className=\"errorText\">{props.errorText}</p>\n      </div>\n      <div className=\"outputArea\">\n        <dl>\n          <dt>図鑑番号</dt>\n          <dd>{props.number}</dd>\n          <dt>名前</dt>\n          <dd>{normalArray[props.number].name}</dd>\n          <dt>タイプ</dt>\n          <dd>\n            <span>{normalArray[props.number].types[0]}</span>\n            <span>{normalArray[props.number].types[1]}</span>\n          </dd>\n        </dl>\n        <div className={\"img imgNo\" + props.number}></div>\n      </div>\n    </section>\n\n  )\n}\n\nexport default SearchPokemon;","import React from \"react\";\nimport normalArray from '../common/createNormalArray'\n\n\nconst ShowData = (props) =>  {\nconsole.log('propsid',props.id)\n  return(\n    \n      <div className=\"outputArea\">\n        <dl>\n          <dt>図鑑番号</dt>\n          <dd>{normalArray[Number(props.id)].no}</dd>\n          <dt>名前</dt>\n          <dd>{normalArray[Number(props.id)].name}</dd>\n          <dt>タイプ</dt>\n          <dd>\n            <span>{normalArray[Number(props.id)].types[0]}</span>\n            <span>{normalArray[Number(props.id)].types[1]}</span>\n          </dd>\n        </dl>\n        <div className={\"img imgNo\" + props.id}></div>\n        <div className={\"img imgColor imgColorNo\" + props.id}></div>\n      </div>\n  \n  )\n}\n\nexport default ShowData;","import React from \"react\";\nimport ShowData from './showDataComponent'\n// import createTypeArray from '../common/createTypeArray'\n\nconst TypeSearch = (props) => {\n\n\n  // const showTypeText = () => {\n\n  //   const clickTypeText = document.getElementById('FnClickTypeText');\n  //   clickTypeText.classList.add(\"is-show\");\n  // }\n  // const removeTypeText = () => {\n\n  //   const clickTypeText = document.getElementById('FnClickTypeText');\n  //   clickTypeText.classList.remove(\"is-show\");\n  // }\n  // const resetType = () => {\n  //   const typeSelector1 = document.getElementById('typeSelector1');\n  //   const typeSelector2 = document.getElementById('typeSelector2');\n\n  //   typeSelector1.value = '-';\n  //   typeSelector2.value = '-';\n\n  //   decideType();\n  //   removeTypeText();\n  // }\n  const nodes = [];\n  for(let i = 0; i<props.subTypeArray.length; i++) {\n    nodes.push(\n      <li \n        key={props.subTypeArray[i].key}\n        id={props.subTypeArray[i].number.no}\n        className={\"imgIcon imgType imgNo\" + props.subTypeArray[i].number.no}\n        onClick={e => props.showData(e.target.id)}\n      >\n      </li>\n    );\n  }\n\n  return(\n    \n    <section className=\"searchSectionType\">\n      <div className=\"inputArea\">\n        <h2>2. タイプ検索</h2>\n        <select id=\"typeSelector1\" onChange={e => props.decideType(e)}>\n          <option>-</option>\n          <option>ノーマル</option>\n          <option>ほのお</option>\n          <option>みず</option>\n          <option>でんき</option>\n          <option>くさ</option>\n          <option>こおり</option>\n          <option>かくとう</option>\n          <option>どく</option>\n          <option>じめん</option>\n          <option>ひこう</option>\n          <option>エスパー</option>\n          <option>むし</option>\n          <option>いわ</option>\n          <option>ゴースト</option>\n          <option>ドラゴン</option>\n          <option>あく</option>\n          <option>はがね</option>\n          <option>フェアリー</option>\n        </select>\n        <select id=\"typeSelector2\" onChange={e => props.decideType(e)}>\n          <option>-</option>\n          <option>ノーマル</option>\n          <option>ほのお</option>\n          <option>みず</option>\n          <option>でんき</option>\n          <option>くさ</option>\n          <option>こおり</option>\n          <option>かくとう</option>\n          <option>どく</option>\n          <option>じめん</option>\n          <option>ひこう</option>\n          <option>エスパー</option>\n          <option>むし</option>\n          <option>いわ</option>\n          <option>ゴースト</option>\n          <option>ドラゴン</option>\n          <option>あく</option>\n          <option>はがね</option>\n          <option>フェアリー</option>\n        </select>\n      {/* <button onClick={e => resetType(e)} className=\"resetType\">タイプリセット</button> */}\n    </div>\n\n     <ShowData \n       id={props.id}\n     />\n     \n     <div>\n       <p id=\"FnClickTypeText\" className=\"clickTypeText\">ポケモンをクリック！</p>\n       <ul className=\"typeShowData\">{nodes}</ul>\n     </div>\n   </section>\n\n  )\n}\n\nexport default TypeSearch;","import React from \"react\";\n// import axios from 'axios';\nimport normalArray from '../common/createNormalArray'\n\n\n\nconst SearchPartner = (props) => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     isLogin:false,\n  //     departmentList : [],\n  //     user: {\n  //       item_list : [{\n  //         user_name : '',\n  //         photo_url : ''\n  //       }]\n  //     },\n  //     resultNo : '1'\n  //   };\n  // }\n\n  // componentDidMount() {\n  //   this.httpClient = axios.create({\n  //       baseURL:'https://kadou.i.nijibox.net/api',\n  //       withCredentials:true,\n  //   });\n  //   this.loadAuth()\n  //       .then(()=>{\n  //         if(! this.state.isLogin){\n  //           return Promise.resolve();\n  //         }\n  //           return this.loadDepartments();\n  //       })\n  //       .catch((err)=>{\n  //           alert(\"APIがエラーを返しました\\n\\n\" + err);\n  //       })\n\n  //   ;\n  // }\n  // loadAuth(){\n  //   return this.httpClient.get('/auth' , {params:{callback:'https://smashawk.github.io/pokedex/'}})\n  //   .then(this.commonResponseHandling)\n  //   .then((result)=>{\n  //     if(result.is_login){\n  //       this.setState({isLogin:true});\n  //     }else if(result.auth_url){\n  //       window.location.href = result.auth_url;\n  //     }\n  //   });\n  // }\n  // loadDepartments(){\n  //   return this.httpClient.get('/who/departments/')\n  //   .then(this.commonResponseHandling)\n  //   .then((result)=>{\n  //     this.setState({departmentList : result});\n  //   })\n  // }\n  // loadUser(){\n\n  //       return this.httpClient.get('/who/user/1')\n  //         .then(this.commonResponseHandling)\n  //         .then((result)=>{\n  //             this.setState({user : result});\n  //         console.log(this.state.user)\n  //         })\n  // }\n  // commonResponseHandling(res){\n  //     if(res.data.code !== \"200\"){\n  //         console.error(res.data.data);\n  //         return Promise.reject(\"API Error:\" + res.data.data.message);\n  //     }\n  //     return Promise.resolve(res.data.data);\n  // }\n\n\n  //   // this.loadNijiUser();\n\n  //   const inputNameValue = document.getElementById('inputName').value;\n  //   const partnerText = document.getElementById('partnerText')\n  //   const partnerSubText = document.getElementById('partnerSubText')\n  //   const nijiImg = document.getElementById('nijiImg')\n\n\n  //   return this.httpClient.get('/who/search?query=' + inputNameValue)\n  //     .then(this.commonResponseHandling)\n  //     .then((result)=>{\n  //       console.log('result', result)\n  //       partnerText.classList.add('is-show');\n  //       if(result.item_list[0]) {\n  //         nijiImg.classList.add('is-show');\n  //         partnerSubText.classList.add('is-show');\n  //         this.setState({\n  //           user : result,\n  //           resultNo : resultNo\n  //         });\n  //       } else {\n  //         nijiImg.classList.remove('is-show');\n  //         partnerSubText.classList.remove('is-show');\n  //         this.setState({\n  //           user: {\n  //             item_list : [{\n  //               user_name : '',\n  //               photo_url : ''\n  //             }]\n  //           },\n  //           resultNo : resultNo\n  //         });\n  //       }\n\n\n  //     console.log(this.state.user)\n  //     })\n\n  // }\n\n    \n    return(\n      \n      <section className=\"searchPartner\">\n        <div className=\"inputArea\">\n        <h2>3. あなたの相棒ポケモン検索</h2>\n          <p className=\"inputAreaText\">※フルネーム推奨</p>\n          <input \n            id=\"inputName\"\n            className=\"inputName\"\n            type=\"text\"\n            placeholder=\"ひらがなで名前を入力しよう\"\n            />\n          <button onClick={e => props.decidePartner(e)}>決定</button>\n        </div>\n        <div className=\"outputArea\">\n          {/* <img src={this.state.user.item_list[0].photo_url} alt=\"\" id=\"nijiImg\" className=\"nijiImg\" /> */}\n          <div>\n            {/* <p id=\"partnerText\" className=\"partnerText\">{this.state.user.item_list[0].user_name}<span id=\"partnerSubText\" className=\"partnerSubText\">は</span>{this.props.normalArray[Number(this.state.resultNo) - 1].name}にきめた！</p> */}\n            <div>\n              <dl>\n                <dt>図鑑番号</dt>\n                <dd>{normalArray[Number(props.resultNo)].no}</dd>\n                <dt>名前</dt>\n                <dd>{normalArray[Number(props.resultNo)].name}</dd>\n                <dt>タイプ</dt>\n                <dd>\n                  <span>{normalArray[Number(props.resultNo)].types[0]}</span>\n                  <span>{normalArray[Number(props.resultNo)].types[1]}</span>\n                </dd>\n              </dl>\n              <div className={\"img imgNo\" + props.resultNo}></div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n    )\n\n}\n\nexport default SearchPartner;","import React from 'react';\nimport IndexPage from \"./indexComponent\";\nimport SearchPokemon from \"./SearchPokemonComponent\";\nimport TypeSearch from './typeSearchComponent';\nimport SearchPartner from './SearchPartnerComponent';\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n\nconst AppComponent = (props) => {\n    \n  console.log('render')\n\n      return(\n        <BrowserRouter>\n          <div className=\"App\">\n            <header>\n              <nav>\n                <Link to=\"/\">TOP</Link>/\n                <Link to=\"/search\">図鑑ナンバー検索</Link>/\n                <Link to=\"/typesearch\">タイプ検索</Link>/\n                <Link to=\"/searchPartner\">相棒ポケモン検索</Link>\n              </nav>\n            </header>\n            <main>\n              \n            <h1>ポケモン図鑑</h1>\n            <hr />\n            <Switch>\n\n              <Route exact path=\"/\" component={IndexPage} />\n\n              <Route path=\"/search\"\n                render={\n                  () => <SearchPokemon\n                    decidePokemon={props.decidePokemon}\n                    number={props.number}\n                    errorText={props.errorText}\n                  />\n                }\n              />\n\n              <Route path=\"/typesearch\"\n                render={\n                  () => <TypeSearch\n                    decideType={props.decideType}\n                    subTypeArray={props.subTypeArray}\n                    showData={props.showData}\n                    id={props.id}\n                  />\n                }\n              />\n\n              <Route path=\"/searchPartner\"\n                render={\n                  () => <SearchPartner\n                    decidePartner={props.decidePartner}\n                    resultNo={props.resultNo}\n                    showData={props.showData}\n                  />\n                }\n              />\n\n            </Switch>\n\n\n              {/* <SearchPartner \n                decidePartner={e => this.decidePartner(e)}\n                normalArray={this.state.normalArray}\n                resultNo={this.state.resultNo}\n              /> */}\n\n            </main>\n\n          </div>\n        </BrowserRouter>\n      )\n}\n\n\n\nexport default AppComponent;\n","import {connect} from 'react-redux';\nimport {decidePokemon, decideType, decidePartner, showData, resetType} from '../actions/index';\nimport AppComponent from '../components/AppComponent';\n\nconst mapStateToProps = state => ({\n  number: state.number,\n  errorText: state.errorText,\n  subTypeArray: state.subTypeArray,\n  id: state.id,\n  resultNo: state.resultNo\n});\n\nconst mapDispatchToProps = dispatch => ({\n      decidePokemon: number => dispatch(decidePokemon(number)),\n      decideType: () => dispatch(decideType()),\n      decidePartner: () => dispatch(decidePartner()),\n      showData: id => dispatch(showData(id)),\n      resetType: () => dispatch(resetType()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AppComponent);\n","import createTypeArray from '../common/createTypeArray'\nimport decideResultNo from '../common/decideResultNo'\n\nexport const decidePokemon = (number) => ({\n  type: (number < 803 && 0 < number) || number == null ? 'TRUE': 'FALSE',\n  number,\n  errorText: ''\n})\n\nexport const decideType = () => {\n\n  const subTypeArray = createTypeArray();\n  console.log('sub', subTypeArray)\n\n  return(\n    {\n      type: 'TYPE',\n      subTypeArray\n    }\n  )\n}\n\nexport const showData = (id) => {\n\n  console.log('id', id)\n\n  return(\n    {\n      type: 'DATA',\n      id\n    }\n  )\n}\n\nexport const decidePartner = () => {\n\n  const resultNo = decideResultNo();\n\n  return(\n    {\n      type: 'PARTNER',\n      resultNo\n    }\n  )\n}\n\nexport const resetType = () => ({\n  type: 'RESET'\n})\n","const number = (state = 0, action) => {\n  switch (action.type) {\n    case 'TRUE':\n      return action.number;\n    default:\n      return 0;\n  }\n};\n\nexport default number;","const errorText = (state = '', action) => {\n  switch (action.type) {\n    case 'TRUE':\n      return '';\n    case 'FALSE':\n      return '適切な数字を入力してください。';\n    default:\n      return state;\n  }\n};\n\nexport default errorText;","const subTypeArray = (state = 0, action) => {\n  switch (action.type) {\n    case 'TYPE':\n      return action.subTypeArray;\n    default:\n      return 0;\n  }\n};\n\nexport default subTypeArray;","const id = (state = 0, action) => {\n  switch (action.type) {\n    case 'DATA':\n      return action.id;\n    default:\n      return 0;\n  }\n};\n\nexport default id;","const resultNo = (state = 0, action) => {\n  switch (action.type) {\n    case 'PARTNER':\n      return action.resultNo;\n    default:\n      return 0;\n  }\n};\n\nexport default resultNo;","const reset = (state = 0, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return '';\n    default:\n      return 0;\n  }\n};\n\nexport default reset;","import {combineReducers} from 'redux';\nimport number from './reducer/number'\nimport errorText from './reducer/errorText'\nimport subTypeArray from './reducer/type'\nimport id from './reducer/id'\nimport resultNo from './reducer/resultNo'\nimport reset from './reducer/reset'\n\nexport default combineReducers({\n  number,\n  errorText,\n  subTypeArray,\n  id,\n  resultNo,\n  reset,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport AppContainer from './js/containers/AppContainer';\nimport { createStore } from 'redux';\nimport rootReducer from './js/reducers/index';\nimport {Provider} from 'react-redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// ストアを作る\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'));"],"sourceRoot":""}